package br.edu.qi.planetoffice.model;
// Generated 09/12/2018 19:07:56 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Turma generated by hbm2java
 */
@Entity
@Table(name="turma")
public class Turma  implements java.io.Serializable {


     private Integer idTurma;
     private Curso curso;
     private Integer capacidade;
     private Date dataFim;
     private Date dataInicio;
     private String tema;
     private Set<Horario> horarios = new HashSet<Horario>(0);
     private Set<Aluno> alunos = new HashSet<Aluno>(0);
     private Set<Produto> produtos = new HashSet<Produto>(0);

    public Turma() {
    }

    public Turma(Curso curso, Integer capacidade, Date dataFim, Date dataInicio, String tema, Set<Horario> horarios, Set<Aluno> alunos, Set<Produto> produtos) {
       this.curso = curso;
       this.capacidade = capacidade;
       this.dataFim = dataFim;
       this.dataInicio = dataInicio;
       this.tema = tema;
       this.horarios = horarios;
       this.alunos = alunos;
       this.produtos = produtos;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idTurma", unique=true, nullable=false)
    public Integer getIdTurma() {
        return this.idTurma;
    }
    
    public void setIdTurma(Integer idTurma) {
        this.idTurma = idTurma;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idCurso")
    public Curso getCurso() {
        return this.curso;
    }
    
    public void setCurso(Curso curso) {
        this.curso = curso;
    }

    
    @Column(name="capacidade")
    public Integer getCapacidade() {
        return this.capacidade;
    }
    
    public void setCapacidade(Integer capacidade) {
        this.capacidade = capacidade;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_fim", length=19)
    public Date getDataFim() {
        return this.dataFim;
    }
    
    public void setDataFim(Date dataFim) {
        this.dataFim = dataFim;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_inicio", length=19)
    public Date getDataInicio() {
        return this.dataInicio;
    }
    
    public void setDataInicio(Date dataInicio) {
        this.dataInicio = dataInicio;
    }

    
    @Column(name="tema", length=70)
    public String getTema() {
        return this.tema;
    }
    
    public void setTema(String tema) {
        this.tema = tema;
    }

@ManyToMany(fetch=FetchType.LAZY, mappedBy="turmas")
    public Set<Horario> getHorarios() {
        return this.horarios;
    }
    
    public void setHorarios(Set<Horario> horarios) {
        this.horarios = horarios;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="matricula", catalog="dbinterdisciplinar", joinColumns = { 
        @JoinColumn(name="idTurma", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idPessoa", nullable=false, updatable=false) })
    public Set<Aluno> getAlunos() {
        return this.alunos;
    }
    
    public void setAlunos(Set<Aluno> alunos) {
        this.alunos = alunos;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="prod_turma", catalog="dbinterdisciplinar", joinColumns = { 
        @JoinColumn(name="idTurma", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idItem", nullable=false, updatable=false) })
    public Set<Produto> getProdutos() {
        return this.produtos;
    }
    
    public void setProdutos(Set<Produto> produtos) {
        this.produtos = produtos;
    }




}


